#include "circular_buffer.h"

// Buffer array and related variables
static int buffer[BUFFER_SIZE];
static uint16_t bufferIndex = 0;
static uint32_t bufferSum = 0;

void putVal(int newValue) {
	// Subtract the oldest value from the sum
	bufferSum -= buffer[bufferIndex];

	// Add the new value to the buffer and update the sum
	buffer[bufferIndex] = newValue;
	bufferSum += newValue;

	// Increment the index and wrap it if necessary
	bufferIndex = (bufferIndex + 1) % BUFFER_SIZE;
}

int getAvg() {
	int average = bufferSum / BUFFER_SIZE;
	return average;
}

void initBuffer() {
	// Initialize the buffer with zeros
	for (uint16_t i = 0; i < BUFFER_SIZE; i++) {
		buffer[i] = 0;
	}

	// Reset the buffer index and sum
	bufferIndex = 0;
	bufferSum = 0;
}
