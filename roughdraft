/*
 * File:   final.c
 * Author: addis
 *
 * Created on April 19, 2023, 11:19 AM
 */


#include "xc.h"
#include "header_file.h"

// CW1: FLASH CONFIGURATION WORD 1 (see PIC24 Family Reference Manual 24.1)
#pragma config ICS = PGx1          // Comm Channel Select (Emulator EMUC1/EMUD1 pins are shared with PGC1/PGD1)
#pragma config FWDTEN = OFF        // Watchdog Timer Enable (Watchdog Timer is disabled)
#pragma config GWRP = OFF          // General Code Segment Write Protect (Writes to program memory are allowed)
#pragma config GCP = OFF           // General Code Segment Code Protect (Code protection is disabled)
#pragma config JTAGEN = OFF        // JTAG Port Enable (JTAG port is disabled)


// CW2: FLASH CONFIGURATION WORD 2 (see PIC24 Family Reference Manual 24.1)
#pragma config I2C1SEL = PRI       // I2C1 Pin Location Select (Use default SCL1/SDA1 pins)
#pragma config IOL1WAY = OFF       // IOLOCK Protection (IOLOCK may be changed via unlocking seq)
#pragma config OSCIOFNC = ON       // Primary Oscillator I/O Function (CLKO/RC15 functions as I/O pin)
#pragma config FCKSM = CSECME      // Clock Switching and Monitor (Clock switching is enabled, 
                                       // Fail-Safe Clock Monitor is enabled)
#pragma config FNOSC = FRCPLL      // Oscillator Select (Fast RC Oscillator with PLL module (FRCPLL))

#define PIXEL_PIN D4
#define PIXEL_COUNT 3
#define PIXEL_TYPE WS2811

Adafruit_NeoPixel strip = Adafruit_NeoPixel(PIXEL_COUNT, PIXEL_PIN, PIXEL_TYPE);


void setup(){
    
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'

 //CLKDIVbits.RCDIV = 0;
 //AD1PCFG = 0x9fff; 
 TRISA = 0b1111111111111110;
 LATA = 0x0000; 
 CLKDIVbits.RCDIV = 0;  //Set RCDIV=1:1 (default 2:1) 32MHz or FCY/2=16M
AD1PCFG = 0x9fff;            //sets all pins to digital I/O
    //TRISA = 0b0000000000011111;  //set port A to inputs, 
    //TRISB = 0b0000000000000011;  //and port B to outputs
    //LATA = 0xffff;               //Set all of port A to HIGH
    //LATB = 0xffff;               //and all of port B to HIGH
}

void store_colors(){ // setting each index to a color
    strip.setPixelColor(0, strip.Color(0, 0, 255); //index 0 so bottom one (blue)
    strip.setPixelColor(1, strip.Color(0, 50, 200);
    strip.setPixelColor(2, strip.Color(0, 100, 150);
    strip.setPixelColor(3, strip.Color(0, 255, 0); // green
    strip.setPixelColor(4, strip.Color(50, 200, 0);
    strip.setPixelColor(5, strip.Color(150, 100, 0);
    strip.setPixelColor(6, strip.Color(200, 50, 0);
    strip.setPixelColor(7, strip.Color(255, 0, 0); // top one so red

}

void change_brightness(){ // based on the temp each index will change its brightness
    //if (temp < 30 && temp > 25){
    //strip.setPixelColor(0, strip.setBrightness(127)); i dont know if you can do this 
    ///strip.setBrightness(127);
    //}
    // or do a loop and everytime the temp goes up add brightness to the last index and take away brightness from the first index
    
    ///ran out of time and dont know exactly how to do this 
    
}




int main(void) {
    
    setup();
    
    while(1)
    {

    }
    return 0;
}
